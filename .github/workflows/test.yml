name: Dismiss PR Approval

on:
  pull_request_review:
    types: [submitted]  # Trigger when a review is submitted (approved, changes requested, etc.)

jobs:
  dismiss-approval:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token:  ${{ secrets.GITHUB_TOKEN }}        
      - name: Get Authors of Commits in the PR
        id: commits
        run:  |
          #Fetch the commits
          PR_COMMITS=$(curl -L -k \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-Github-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/commits")
          COMMITS_AUTHORS=$(echo "$PR_COMMITS" | jq -r '.[].author.login' | sort | uniq | paste -sd, -)
          echo "commits_authors=$COMMITS_AUTHORS" >> $GITHUB_ENV
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub token to authenticate API calls
      - name: Get the reviewer and committer details
        id: review
        run: |
          REVIEWER=$(jq --raw-output '.review.user.login' < $GITHUB_EVENT_PATH)
          COMMITS_AUTHORS=${{ env.commits_authors }}
  
          IFS=',' read -r -a authors_array <<< "$COMMITS_AUTHORS"
          for author in "${authors_array[@]}"; do
            if[ "$author" == "$REVIEWER" ]; THEN
              curl -L -k \
              -X PUT \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "X-Github-Api-Version: 2022-11-28" \
              "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/reviews/${{ github.event.review.id }}/dismissals" \
              -d '{"message": "Commits authors cannot approve their own PRs. "}'
              break
            fi
          done
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub token to authenticate API calls
            
      
